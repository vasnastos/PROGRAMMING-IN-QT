#include "mainwindow.h"

MainWindow::MainWindow(QWidget *parent)
    : QMainWindow(parent)
{
    this->setFixedSize(600,700);
    this->setWindowTitle("Company Details");
    mw=new QWidget;
    mw->setFixedSize(this->width(),this->height());
    this->setCentralWidget(mw);
    ml=new QVBoxLayout;
    mw->setLayout(ml);
    QLabel *rec=new QLabel;
    rec->setFixedSize(0.98 * this->width(),0.30 * height());
    rec->setStyleSheet("border-style=2px-solid");
    QPixmap pix(":/company.png");
    rec->setPixmap(pix);
    ml->addWidget(rec);
    QPushButton *b1=new QPushButton;
    b1->setText("LOAD");
    QPushButton *b2=new QPushButton;
    b2->setText("EXPORT");
    QPushButton *b3=new QPushButton;
    b3->setText("SAVE");
    QHBoxLayout *r1=new QHBoxLayout;
    ml->addLayout(r1);
    r1->addWidget(b1);
    r1->addWidget(b2);
    r1->addWidget(b3);
    connect(b1,SIGNAL(clicked(bool)),this,SLOT(loadslot()));
    connect(b2,SIGNAL(clicked(bool)),this,SLOT(exportpng()));
    connect(b3,SIGNAL(clicked(bool)),this,SLOT(saveslot()));
    tab=new QTableWidget;
    QStringList list;
    list<<"DEPARTMENT"<<"AVERAGE"<<"MAX SALES";
    tab->setColumnCount(list.size());
    tab->setHorizontalHeaderLabels(list);
    tab->setFixedSize(0.98 * width(),0.30 * height());
    ml->addWidget(tab);
    chart=new QChart();
    chart->setTitle("SALES CHART");
    series=new QPieSeries;
    chart->addSeries(series);
    view=new QChartView;
    view->setRenderHint(QPainter::Antialiasing);
    ml->addWidget(view);
}

void MainWindow::loadslot()
{
    QString fn=QFileDialog::getOpenFileName(this,"File open",".","txt files (*.txt *.csv)");

    if(fn.size()==0) return;

    QFile fp(fn);

    bool ok=fp.open(QIODevice::ReadOnly | QIODevice::Text);

    if(!ok) return;

    QTextStream st(&fp);

    while(!st.atEnd())
    {
        QString line=st.readLine();
        if(line.startsWith("#")) continue;
        if(line.size()==0) continue;
        QStringList data=line.split(",");
        if(data.size()!=4) continue;
        employee emp;
        emp.name=data[1];
        emp.nsales=data[2].toInt();
        emp.salary=data[3].toDouble();
        int pos=-1;
        for(int i=0;i<deps.size();i++)
        {
          if(deps[i].get_dep_name()==data[0])
          {
              pos=i;
          }
        }
        if(pos!=-1)
        {
           deps[pos].add_employee(emp);
        }
        else
        {
            department d(data[0]);
            d.add_employee(emp);
        }
    }
    fp.close();
}

void MainWindow::exportpng()
{
    QString fn=QFileDialog::getSaveFileName(this,"image save",".","png files (*.png)");
    if(fn.size()!=0)
    {
        QPixmap px=tab->grab();
        px.save(fn,"png");
    }
}

void MainWindow::saveslot()
{
    QString fn=QFileDialog::getSaveFileName(this,"SAVE FILE",".","txt files (*.txt *.csv)");

    if(fn.size()==0)
    {
        return;
    }

    QFile fp(fn);

    fp.open(QIODevice::WriteOnly | QIODevice::Text);

    QTextStream st(&fp);

    for(int i=0;i<deps.size();i++)
    {
        st<<deps[i].to_string()<<endl;
    }
    fp.close();
}

void MainWindow::showslot()
{
    if(deps.size()==0)
    {
        QMessageBox::critical(this,"ERROR","<p style=color:red>No such record exist</p>");
        return;
    }
    tab->setRowCount(deps.size());
    for(int i=0;i<tab->rowCount();i++)
    {
        tab->setItem(i,0,new QTableWidgetItem(deps[i].get_dep_name()));
        QPushButton *bprop=new QPushButton;
        bprop->setText("AVERAGE SALARY");
        bprop->setProperty("sal",deps[i].get_dep_name());
        tab->setCellWidget(i,1,bprop);
        connect(bprop,SIGNAL(clicked(bool)),this,SLOT(averagesal()));
        QPushButton *bsl=new QPushButton;
        bsl->setText("SALES AVERAGE");
        bsl->setProperty("sales",deps[i].get_dep_name());
        connect(bsl,SIGNAL(clicked(bool)),this,SLOT(averageslot()));
        tab->setCellWidget(i,2,bsl);
        QPushButton *shb=new QPushButton;
        shb->setText("SHOW");
        shb->setProperty("show",deps[i].get_dep_name());
        tab->setCellWidget(shb,SIGNAL(clicked(bool)),this,SLOT(showempsslot()));

    }
   for(int i=0;i<deps.size();i++)
   {
       series->append(deps[i].get_dep_name(),deps[i].average_sales());
   }
   chart->removeSeries(series);
   chart->addSeries(series);
}

MainWindow::~MainWindow() {}

